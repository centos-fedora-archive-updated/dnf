From d57aa8f75350d3dfde54e419465a1a84ca72e164 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ale=C5=A1=20Mat=C4=9Bj?= <amatej@redhat.com>
Date: Mon, 11 Nov 2019 14:14:32 +0100
Subject: [PATCH] Revert "Fix messages for starting and failing scriptlets
 (RhBug:1724779)"

This reverts commit 14c0a778def2a8a821177ebb54c9f32787bff11b.
---
 dnf/yum/rpmtrans.py | 36 +++++-------------------------------
 1 file changed, 5 insertions(+), 31 deletions(-)

diff --git a/dnf/yum/rpmtrans.py b/dnf/yum/rpmtrans.py
index 58c6101895..57f71e69bf 100644
--- a/dnf/yum/rpmtrans.py
+++ b/dnf/yum/rpmtrans.py
@@ -391,21 +391,9 @@ def _scriptError(self, amount, total, key):
         scriptlet_name = rpm.tagnames.get(amount, "<unknown>")
 
         transaction_list = self._extract_cbkey(key)
-        pkg_currenly_being_handled = transaction_list[0].pkg
+        name = transaction_list[0].pkg.name
 
-        if hasattr(key, "name"):
-            pkg_which_owns_this_scriptlet_name = key.name
-        else:
-            pkg_which_owns_this_scriptlet_name = key
-
-        # In case rpm trigger runs scriptlet of some other package
-        if pkg_which_owns_this_scriptlet_name != pkg_currenly_being_handled.name:
-            msg = ("Error in %s scriptlet in rpm package %s triggered by rpm package %s"
-                   % (scriptlet_name, pkg_which_owns_this_scriptlet_name,
-                      pkg_currenly_being_handled))
-        else:
-            msg = ("Error in %s scriptlet in rpm package %s"
-                   % (scriptlet_name, pkg_currenly_being_handled))
+        msg = ("Error in %s scriptlet in rpm package %s" % (scriptlet_name, name))
 
         for display in self.displays:
             display.error(msg)
@@ -414,29 +402,15 @@ def _script_start(self, key):
         # TODO: this doesn't fit into libdnf TransactionItem use cases
         action = dnf.transaction.PKG_SCRIPTLET
         if key is None and self._te_list == []:
-            pkg_currenly_being_handled = 'None'
+            pkg = 'None'
         else:
             transaction_list = self._extract_cbkey(key)
-            pkg_currenly_being_handled = transaction_list[0].pkg
+            pkg = transaction_list[0].pkg
         complete = self.complete_actions if self.total_actions != 0 and self.complete_actions != 0 \
             else 1
         total = self.total_actions if self.total_actions != 0 and self.complete_actions != 0 else 1
-
-        if hasattr(key, "name"):
-            pkg_which_owns_this_scriptlet_name = key.name
-        else:
-            pkg_which_owns_this_scriptlet_name = key
-
-        # In case rpm trigger runs scriptlet of some other package
-        if pkg_which_owns_this_scriptlet_name != pkg_currenly_being_handled.name:
-            # Show only the pkg name, because we don't have the full nevra
-            # and if we search for the pkg we could show misleding information
-            pkg_or_key = pkg_which_owns_this_scriptlet_name
-        else:
-            pkg_or_key = pkg_currenly_being_handled
-
         for display in self.displays:
-            display.progress(pkg_or_key, action, 100, 100, complete, total)
+            display.progress(pkg, action, 100, 100, complete, total)
 
     def _scriptStop(self):
         self._scriptout()
